use std::fs::{remove_dir_all, remove_file, File};
use std::io::{BufRead, BufReader, Result};
use std::path::Path;

/// The path to the file that tracks autogenerated files.
pub const AUTOGEN_TRACKER: &str = ".autogen.txt";

/// Clean up all autogenerated files.
fn clean_autogen() -> Result<()> {
    match File::open(AUTOGEN_TRACKER) {
        Ok(existing_tracker) => {
            for line in BufReader::new(existing_tracker).lines() {
                let filename = line.unwrap();
                match remove_file(&filename) {
                    Ok(_) => (), // be silent on success
                    Err(_) => println!(
                        "Skipping deletion of {}. It might not exist anymore.",
                        filename
                    ),
                }
            }
            remove_file(AUTOGEN_TRACKER)?;
        }
        Err(_) => println!("No autogenerated files to clean up."),
    }
    Ok(())
}

/// Clean up ZAMM build directory.
fn clean_zamm_build() -> Result<()> {
    let dot_zamm = Path::new(".zamm");
    if dot_zamm.exists() {
        remove_dir_all(dot_zamm)
    } else {
        // the "No autogenerated files" alert above should suffice for this case as well
        Ok(())
    }
}

/// Clean ZAMM build directory, as well as generated files.
pub fn clean() -> Result<()> {
    clean_autogen()?;
    clean_zamm_build()
}
